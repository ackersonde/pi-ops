name: Deploy Infra scripts to PI

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-20.04
    env:
      SSH_CXN: ${{ secrets.CTX_IPV6_MASTER_HOME }}
      LOG_FILES: "/var/log/update_domain_records.log /var/log/gen_new_deploy_keys.log /var/log/fritz-cert-upload.log"
      CTX_DIGITALOCEAN_DROPLET_PROXY_TOKEN: ${{ secrets.CTX_DIGITALOCEAN_DROPLET_PROXY_TOKEN }}
      CTX_DIGITALOCEAN_FIREWALL: ${{ secrets.CTX_DIGITALOCEAN_FIREWALL }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - name: Build and deploy application
        run: |
          git clone https://github.com/ackersonde/digitaloceans.git
          cd digitaloceans
          go get -t -d -v ./...
          go build do.go
          cd ../

          sed -i -e "s@{{CTX_ROUTER_USER}}@${{ secrets.CTX_ROUTER_USER }}@" scripts/fritz-cert-upload.sh
          sed -i -e "s@{{CTX_ROUTER_PASSWD}}@${{ secrets.CTX_ROUTER_PASSWD }}@" scripts/fritz-cert-upload.sh

          sed -i -e "s@{{CACERT_KEY_PASS}}@${{ secrets.CACERT_KEY_PASS }}@" scripts/github_deploy_params
          sed -i -e "s@{{GIT_APP_CLIENT_ID}}@${{ secrets.CTX_GITHUB_APP_CLIENT_ID }}@" scripts/github_deploy_params
          sed -i -e "s@{{GIT_INSTALL_ID}}@${{ secrets.CTX_GITHUB_INSTALL_ID }}@" scripts/github_deploy_params
          sed -i -e "s@{{GIT_APP_SECRETS_PK_PEM_FILE}}@${{ secrets.GIT_APP_SECRETS_PK_PEM_FILE }}@" scripts/github_deploy_params
          sed -i -e "s@{{CTX_SLACK_NOTIFICATIONS_TOKEN}}@${{ secrets.CTX_SLACK_NOTIFICATIONS_TOKEN }}@" scripts/github_deploy_params
          chmod 600 scripts/github_deploy_params

          echo "${{ secrets.CTX_GITHUB_SECRETS_PK_PEM }}" > scripts/${{ secrets.GIT_APP_SECRETS_PK_PEM_FILE }}
          chmod 600 scripts/${{ secrets.GIT_APP_SECRETS_PK_PEM_FILE }}
          echo "${{ secrets.CA_KEY }}" > scripts/ca_key
          chmod 600 scripts/ca_key

          # grab github.py from digitaloceans repo
          curl -o scripts/github.py https://raw.githubusercontent.com/ackersonde/digitaloceans/master/scripts/github.py

          cat <<DEPLOY_EOF >deploy-pi-ops.sh
          #!/usr/bin/bash
          ssh -o StrictHostKeyChecking=no ubuntu@$SSH_CXN '\
            mkdir my-ca || true && \
            sudo touch -m $LOG_FILES && sudo chown ubuntu:ubuntu $LOG_FILES'

          scp scripts/fritz-cert-upload.sh scripts/traefik-certs-dumper ubuntu@[$SSH_CXN]:~/traefik/
          scp scripts/update_*.sh scripts/fritzBoxShell* ubuntu@[$SSH_CXN]:~/
          scp scripts/gen_new_deploy_keys.sh scripts/*.py scripts/${{ secrets.GIT_APP_SECRETS_PK_PEM_FILE }} scripts/ca_key ubuntu@[$SSH_CXN]:~/my-ca/
          scp scripts/github_deploy_params ubuntu@[$SSH_CXN]:~/.ssh/
          scp scripts/crontab.txt ubuntu@[$SSH_CXN]:/tmp/
          DEPLOY_EOF
          chmod u+x deploy-pi-ops.sh

          mkdir ~/.ssh
          cat <<EOF >~/.ssh/id_rsa
          ${{ secrets.CTX_DIGITALOCEAN_SSH_PRIVKEY }}
          EOF
          chmod 400 ~/.ssh/id_rsa

          public_ip_address=$(curl -s https://checkip.amazonaws.com)
          ./digitaloceans/do -fn=firewallSSH -allow=true -ip=$public_ip_address -tag=traefik

          scp -o StrictHostKeyChecking=no -r scripts deploy-pi-ops.sh root@ackerson.de:~/
          ssh root@ackerson.de ./deploy-pi-ops.sh
          ssh root@ackerson.de rm -Rf scripts/ deploy-pi-ops.sh

          rm -Rf .ssh/ scripts/ deploy-pi-ops.sh
          ./digitaloceans/do -fn=firewallSSH -allow=false -ip=$public_ip_address

          curl -s -o /dev/null -X POST -d token=${{ secrets.CTX_SLACK_NOTIFICATIONS_TOKEN }} -d channel=C092UE0H4 \
            -d text="<https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID | $GITHUB_REPOSITORY @ $GITHUB_RUN_ID>" \
            https://slack.com/api/chat.postMessage
